package com.application.test;
import com.application.test.Controller.*;
import com.application.test.Model.GeneralManagement;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.scene.Parent;


import java.io.IOException;
import java.net.URL;

public class DictionaryApplication extends Application {
    private Scene dailyWordleScene;
    private DailyWordleController dailyWordleControllerInstance;
    private Stage primaryStage;
    private GeneralManagement dictionaryManagement;
    private Scene welcomeScene;
    private Scene dictionaryScene;
    private Scene gameMenuScene;
    private WelcomeController welcomeControllerInstance;
    private DictionaryController dictionaryControllerInstance;
    private GamesController gamesControllerInstance;
    private Scene wordleScene;
    private WordleController wordleControllerInstance;
    private String pendingActionWord = null;
    private boolean pendingAddAction = false;
    private Scene wordleMenuScene;
    private WordleMenuController wordleMenuControllerInstance;
    @Override
    public void start(Stage stage) throws IOException {
        this.primaryStage = stage;
        primaryStage.setUserData(this);
        stage.setTitle("·ª®ng d·ª•ng T·ª´ ƒëi·ªÉn");

        // *** Kh·ªüi t·∫°o DictionaryManager v√† n·∫°p d·ªØ li·ªáu cho T·∫§T C·∫¢ c√°c ngu·ªìn ***
        this.dictionaryManagement = new GeneralManagement();
        dictionaryManagement.loadAllSourcesData(); // N·∫°p d·ªØ li·ªáu cho t·∫•t c·∫£ sources

        // --- Load m√†n h√¨nh Welcome ---
        URL welcomeFxmlUrl = getClass().getResource("/com/application/test/view/welcome.fxml"); // Ki·ªÉm tra l·∫°i ƒë∆∞·ªùng d·∫´n
        if (welcomeFxmlUrl == null) { System.err.println("L·ªói: Kh√¥ng t√¨m th·∫•y file welcome.fxml trong classpath!"); System.exit(1); }
        FXMLLoader welcomeLoader = new FXMLLoader(welcomeFxmlUrl);
        Parent welcomeRoot = welcomeLoader.load();
        WelcomeController welcomeController = welcomeLoader.getController();
        welcomeController.setDictionaryManagement(this.dictionaryManagement);
        welcomeController.setOnSearchInitiated(this::handleSearchInitiated);
        welcomeController.setOnAddWordInitiated(this::handleAddWordInitiated);
        welcomeController.setOnGoToGame(this::showGameMenu);
        // TODO: Thi·∫øt l·∫≠p callback cho c√°c n√∫t kh√°c n·∫øu ch√∫ng d·∫´n ƒë·∫øn m√†n h√¨nh/ch·ª©c nƒÉng kh√°c


        this.welcomeScene = new Scene(welcomeRoot);
        stage.setScene(welcomeScene);
        stage.show();
        stage.setResizable(false);

        // X·ª≠ l√Ω s·ª± ki·ªán khi ƒë√≥ng c·ª≠a s·ªï
        stage.setOnCloseRequest(event -> {
            System.out.println("ƒêang ƒë√≥ng ·ª©ng d·ª•ng...");
            if (dictionaryManagement != null) {
                dictionaryManagement.saveAllSourcesData(); // L∆∞u d·ªØ li·ªáu cho T·∫§T C·∫¢ c√°c ngu·ªìn
            }
            if (dictionaryControllerInstance != null) {
                dictionaryControllerInstance.resetScene(); // Reset Dictionary view
            }
            // *** Call resetView on WelcomeController instance before closing ***
            if (welcomeControllerInstance != null) {
                welcomeControllerInstance.resetView(); // Reset Welcome view
            }
            System.out.println("·ª®ng d·ª•ng ƒë√£ ƒë√≥ng.");
        });
    }

    // *** H√†m x·ª≠ l√Ω khi WelcomeController b√°o hi·ªáu t√¨m ki·∫øm ***
    public void handleSearchInitiated(String searchTerm) {
        this.pendingActionWord = searchTerm; // L∆∞u t·ª´ kh√≥a t√¨m ki·∫øm
        this.pendingAddAction = false; // Kh√¥ng ph·∫£i h√†nh ƒë·ªông th√™m
        showDictionaryView(); // Chuy·ªÉn sang m√†n h√¨nh t·ª´ ƒëi·ªÉn
    }

    // *** H√†m x·ª≠ l√Ω khi WelcomeController b√°o hi·ªáu th√™m t·ª´ ***
    private void handleAddWordInitiated(String wordToAdd) {
        this.pendingActionWord = wordToAdd; // L∆∞u t·ª´ c·∫ßn th√™m
        this.pendingAddAction = true; // L√† h√†nh ƒë·ªông th√™m
        showDictionaryView(); // Chuy·ªÉn sang m√†n h√¨nh t·ª´ ƒëi·ªÉn
    }

    /**
     * Load m√†n h√¨nh Dictionary View (n·∫øu ch∆∞a), thi·∫øt l·∫≠p callback quay l·∫°i,
     * truy·ªÅn DictionaryManagement, L∆ØU instance Controller.
     * Sau ƒë√≥, ki·ªÉm tra pending actions (t√¨m ki·∫øm ho·∫∑c th√™m) v√† x·ª≠ l√Ω.
     */
    private void showDictionaryView() {
        try {
            if (this.dictionaryScene == null) {
                FXMLLoader dictionaryLoader = new FXMLLoader(getClass().getResource("/com/application/test/view/dictionary_view.fxml"));
                Parent dictionaryRoot = dictionaryLoader.load();
                this.dictionaryControllerInstance = dictionaryLoader.getController();

                // Truy·ªÅn instance DictionaryManagement
                dictionaryControllerInstance.setDictionaryManagement(this.dictionaryManagement);

                // Thi·∫øt l·∫≠p callback quay l·∫°i
                dictionaryControllerInstance.setOnGoBackToWelcome(this::showWelcomeView);

                this.dictionaryScene = new Scene(dictionaryRoot);
            }

            if (welcomeControllerInstance != null) {
                welcomeControllerInstance.resetView();
            } else {
                System.err.println("WelcomeController instance is null. Cannot reset Welcome scene.");
            }

            // Thay th·∫ø Scene hi·ªán t·∫°i b·∫±ng Scene t·ª´ ƒëi·ªÉn
            primaryStage.setScene(this.dictionaryScene);
            primaryStage.setTitle("üìö Dictionary Lookup");
            System.out.println("ƒê√£ chuy·ªÉn sang m√†n h√¨nh t·ª´ ƒëi·ªÉn.");

            // *** Sau khi chuy·ªÉn Scene, x·ª≠ l√Ω c√°c pending actions ***
            if (this.pendingAddAction) {
                if (this.pendingActionWord != null && !this.pendingActionWord.isEmpty()) {
                    Stage currentStage = (Stage) primaryStage.getScene().getWindow();
                    dictionaryControllerInstance.initiateAddWordDialog(this.pendingActionWord, primaryStage);
                }
            } else {
                // N·∫øu kh√¥ng ph·∫£i add action, th√¨ c√≥ th·ªÉ l√† search ho·∫∑c ch·ªâ chuy·ªÉn m√†n h√¨nh
                // D√π c√≥ pendingActionWord hay kh√¥ng, g·ªçi setSearchText ƒë·ªÉ c·∫≠p nh·∫≠t search field
                // v√† trigger logic hi·ªÉn th·ªã ban ƒë·∫ßu ho·∫∑c search/g·ª£i √Ω
                dictionaryControllerInstance.setSearchText(this.pendingActionWord != null ? this.pendingActionWord : "");
            }

            // Reset pending actions (ƒë√£ x·ª≠ l√Ω trong setSearchText n·∫øu text r·ªóng)
            this.pendingActionWord = null;
            this.pendingAddAction = false;

        } catch (IOException e) {
            System.err.println("L·ªói khi load m√†n h√¨nh t·ª´ ƒëi·ªÉn: " + e.getMessage());
            e.printStackTrace();
        }
    }
    private void showSpecificGameMenu(String gameId) {
        try {
            if (!"wordle".equals(gameId)) {
                System.err.println("Game ID kh√¥ng h·ª£p l·ªá: " + gameId);
                return;
            }

            if (this.wordleMenuScene == null) {
                URL menuFxmlUrl = getClass().getResource("/com/application/test/view/wordlemenu.fxml");
                System.out.println("Loading wordlemenu.fxml from: " + menuFxmlUrl);
                if (menuFxmlUrl == null) {
                    System.err.println("L·ªói: Kh√¥ng t√¨m th·∫•y file wordlemenu.fxml!");
                    return;
                }

                FXMLLoader menuLoader = new FXMLLoader(menuFxmlUrl);
                Parent menuRoot = menuLoader.load();
                this.wordleMenuControllerInstance = menuLoader.getController();
                System.out.println("WordleMenuController instance: " + wordleMenuControllerInstance);

                wordleMenuControllerInstance.setOnGoBackToGames(this::showGameMenu);
                wordleMenuControllerInstance.setOnLaunchWordle(() -> showSpecificGame("wordle"));
                wordleMenuControllerInstance.setOnLaunchDailyWordle(() -> showSpecificGame("daily_wordle"));

                this.wordleMenuScene = new Scene(menuRoot);
            }

            if (welcomeControllerInstance != null) welcomeControllerInstance.resetView();
            if (dictionaryControllerInstance != null) dictionaryControllerInstance.resetScene();

            primaryStage.setScene(this.wordleMenuScene);
            primaryStage.setTitle("Wordle Menu");
            System.out.println("ƒê√£ chuy·ªÉn sang Wordle Menu.");

        } catch (IOException e) {
            System.err.println("IOException when loading Wordle Menu: " + e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {
            System.err.println("Unexpected error when loading Wordle Menu: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void showGameMenu() {
        try {
            if (this.gameMenuScene == null) {
                URL gameMenuFxmlUrl = getClass().getResource("/com/application/test/view/games.fxml");
                if (gameMenuFxmlUrl == null) {
                    System.err.println("L·ªói: Kh√¥ng t√¨m th·∫•y file games.fxml trong classpath!");
                    System.exit(1);
                }
                FXMLLoader gameMenuLoader = new FXMLLoader(gameMenuFxmlUrl);
                Parent gameMenuRoot = gameMenuLoader.load();
                this.gamesControllerInstance = gameMenuLoader.getController();

                gamesControllerInstance.setOnGoBackToWelcome(this::showWelcomeView);
                gamesControllerInstance.setOnLaunchSpecificGame(this::showSpecificGameMenu);

                this.gameMenuScene = new Scene(gameMenuRoot);
            }

            if (welcomeControllerInstance != null) {
                welcomeControllerInstance.resetView();
            }
            if (dictionaryControllerInstance != null) {
                dictionaryControllerInstance.resetScene();
            }

            primaryStage.setScene(this.gameMenuScene);
            primaryStage.setTitle("üéÆ Games");
            System.out.println("ƒê√£ chuy·ªÉn sang m√†n h√¨nh game (Menu).");

        } catch (IOException e) {
            System.err.println("L·ªói khi load m√†n h√¨nh game menu: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private void showSpecificGame(String gameId) {
        try {
            String fxmlFile;
            String title;
            if ("wordle".equals(gameId)) {
                fxmlFile = "/com/application/test/view/wordle_view.fxml";
                title = "Wordle Game";
            } else if ("daily_wordle".equals(gameId)) {
                fxmlFile = "/com/application/test/view/daily_wordle_view.fxml";
                title = "Daily Wordle Game";
            } else {
                System.err.println("Game ID kh√¥ng h·ª£p l·ªá: " + gameId);
                return;
            }

            URL gameFxmlUrl = getClass().getResource(fxmlFile);
            System.out.println("Loading " + fxmlFile + " from: " + gameFxmlUrl);
            if (gameFxmlUrl == null) {
                System.err.println("L·ªói: Kh√¥ng t√¨m th·∫•y file " + fxmlFile + "!");
                return;
            }

            if ("wordle".equals(gameId) && this.wordleScene == null) {
                FXMLLoader loader = new FXMLLoader(gameFxmlUrl);
                Parent root = loader.load();
                this.wordleControllerInstance = loader.getController();
                this.wordleScene = new Scene(root);
            } else if ("daily_wordle".equals(gameId) && this.dailyWordleScene == null) {
                FXMLLoader loader = new FXMLLoader(gameFxmlUrl);
                Parent root = loader.load();
                this.dailyWordleControllerInstance = loader.getController();
                this.dailyWordleScene = new Scene(root);
            }

            if ("wordle".equals(gameId) && wordleControllerInstance != null) {
                wordleControllerInstance.setOnGoBackToMenu(() -> showSpecificGameMenu("wordle"));
                wordleControllerInstance.resetGame();
            } else if ("daily_wordle".equals(gameId) && dailyWordleControllerInstance != null) {
                dailyWordleControllerInstance.setOnGoBackToMenu(() -> showSpecificGameMenu("wordle"));
                dailyWordleControllerInstance.resetGame();
            } else {
                System.err.println("Controller instance is null for gameId: " + gameId);
            }

            if (welcomeControllerInstance != null) welcomeControllerInstance.resetView();
            if (dictionaryControllerInstance != null) dictionaryControllerInstance.resetScene();

            primaryStage.setScene("wordle".equals(gameId) ? this.wordleScene : this.dailyWordleScene);
            primaryStage.setTitle(title);
            System.out.println("ƒê√£ chuy·ªÉn sang m√†n ch∆°i " + title + ".");

        } catch (IOException e) {
            System.err.println("IOException when loading Game: " + e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {
            System.err.println("Unexpected error when loading Game: " + e.getMessage());
            e.printStackTrace();
        }
    }
    /**
     * Chuy·ªÉn v·ªÅ m√†n h√¨nh Welcome View.
     */
    private void showWelcomeView() {
        if (this.welcomeScene != null) {
            primaryStage.setScene(this.welcomeScene);
            primaryStage.setTitle("·ª®ng d·ª•ng T·ª´ ƒëi·ªÉn");
            if (welcomeControllerInstance != null) {
                welcomeControllerInstance.resetView();
            } else {
                System.err.println("WelcomeController instance is null. Cannot reset Welcome scene.");
            }
        } else {
            System.err.println("Welcome scene ch∆∞a ƒë∆∞·ª£c t·∫°o!");
        }
    }


    public static void main(String[] args) {
        launch();
    }
}